@model BookStore.ViewModels.Autor.EditorAutorViewModel

@if (ViewData.ContainsKey("readonly") && ((bool)ViewData["readonly"]))
{
    <div class="form-group">
        @Html.LabelFor(model => model.Nome)
        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        @*@Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })*@
    </div>

    <button type="button" class="btn btn-info" onclick="location.href='@Url.Action("Index", "Autor", new { id = Model.Id })'">Voltar</button>

    return;
}

<div class="form-group">
    @Html.LabelFor(model => model.Nome)
    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
    @*@Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })*@
</div>

<button type="button" class="btn btn-info" onclick="location.href='@Url.Action("Index", "Autor", new { id = Model.Id })'">Voltar</button>